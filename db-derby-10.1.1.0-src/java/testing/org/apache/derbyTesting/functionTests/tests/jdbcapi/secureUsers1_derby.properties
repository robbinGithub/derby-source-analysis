### warning - following contains fictional names only

#
# secureUsers configuration:
#
# Here we configure 5 databases with each of them having a different
# authentication scheme being set. NT authentication is done through
# Netscape LDAP NT Synchronization service that basically set-up
# and synchronize a X500 organization corresponding to the NT domain
# handled by the PDC (NT Primary Domain Controller).
#
# The different authentication schemes we test and provide are:
#
#	- None (user is always authenticated successfully)
#	- BUILTIN (BUILTIN Basic authentication scheme relying on
#				  users to be defined in derby.user.<userName>
#				  property).
#	- LDAP (user to be authenticated against an LDAP server)
#			NOTE: LDAP scheme is used for NT authentication as well;
#				  being done thru Netscape directory NT synch service)
#	- NIS+ (user to be authenticated against a NIS+ server)
#	- User defined authentication scheme (that implements the authentication
#	  interface)
# 
derby.infolog.append=true

# Turn on authentication at the system level
derby.connection.requireAuthentication=true

# Trace ON for authentication
#
# (tracing appears in derby.log)
# (if ldap used there is also another file called
#  DerbyLDAP.out for ldap requests tracing)
derby.debug.true=AuthenticationTrace

################################################################
#
# Default provider if none specified and requireAuthentication
# set to true.
#
# BUILTIN Authentication settings
#
# derby.authentication.provider=BUILTIN
#
################################################################
#
# Users definition for the BUILTIN scheme - Note that this
# users are defined at the system level. They could be overriden
# at the database level using setDatabaseProperty() method
# alias. In a sens the following definitions below will be known
# by all databases using BUILTIN scheme (unless database has
# got the 'derby.database.propertiesOnly' set to 'true').
#
derby.user.system=manager
derby.user.Jamie=theHooligan
derby.user.francois=paceesalute
derby.user.jeff=homeRun
derby.user.howardR=takeItEasy
derby.user.kreg=IwasBornReady

################################################################
#
# LDAP Authentication Settings
#
# derby.authentication.provider=LDAP
#
# derby.authentication.server=localhost:389
# derby.authentication.server=//localhost:389
# derby.authentication.server=ldap://localhost:389
#
################################################################
#
# LDAP search base
#
#derby.authentication.ldap.searchBase=o=opensource.apache.com

# LDAP search filters examples
#
# [default is: (&((objectClass=inetOrgPerson)(uid=%USERNAME%))) ]
#
#derby.authentication.ldap.searchFilter=(&((objectClass=inetOrgPerson)(uid=%USERNAME%)))
#derby.authentication.ldap.searchFilter=(&((ou=People)(uid=%USERNAME%))
#derby.authentication.ldap.searchFilter=ou=People
#derby.authentication.ldap.searchFilter=derby.user
#
# Example on how to cache user's full DN in Derby in order
# to save the ldap initial user dn lookup.
#
# Note that if user DN not found/cached in derby.user; then
# normal userDN lookup with default search filter is applied.
#
#derby.user.francois=uid=francois,ou=People,o=opensource.apache.com

################################################################
#
# NIS+ Authentication Settings
#
# derby.authentication.provider=NIS+
#
# derby.authentication.server=thehost/apache.com
# derby.authentication.server=//thehost/apache.com
# derby.authentication.server=nisplus://thehost/apache.com
# derby.authentication.server=nis+://thehost/apache.com
#
################################################################

################################################################
#
# User provider scheme. See JavaDoc for details.
#
#
# derby.authentication.provider=com.a.valid.classPath.AuthScheme
#
################################################################
#

